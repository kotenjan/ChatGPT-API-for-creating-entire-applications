openapi: 3.0.0
info:
  title: File Management API
  version: 1.0.0
  description: An API for managing files and directories
servers:
  - url: https://c9d19f7b260f.ngrok.app
paths:
  /list_directory:
    get:
      summary: List contents of a directory
      description: Returns the list of files and directories for a given path.
      operationId: listDirectory
      parameters:
        - name: directory_path
          in: query
          required: false
          description: The path to the directory to list.
          schema:
            type: string
            default: .
      responses:
        "200":
          description: Successful response with directory contents.
          content:
            application/json:
              schema:
                type: object
                properties:
                  files:
                    type: array
                    items:
                      type: string
                  directories:
                    type: array
                    items:
                      type: string
        "404":
          description: Directory not found.
        "500":
          description: Internal Server Error.
  /create_file:
    post:
      summary: Create a new file
      description: Creates a new file with specified content.
      operationId: createFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file_name:
                  type: string
                  description: Name of the file to be created.
                content:
                  type: string
                  description: Content to be written in the file.
                  default: ""
      responses:
        "200":
          description: File created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryContentsResponse"
        "500":
          description: Internal Server Error.
  /create_directory:
    post:
      summary: Create a new directory
      description: Creates a new directory at the specified path.
      operationId: createDirectory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                directory_path:
                  type: string
                  description: Path of the directory to be created.
      responses:
        "200":
          description: Directory created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryContentsResponse"
        "500":
          description: Internal Server Error.
  /remove_file:
    post:
      summary: Remove a file
      description: Removes a file at the specified path.
      operationId: removeFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file_path:
                  type: string
                  description: Path of the file to be removed.
      responses:
        "200":
          description: File removed successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryContentsResponse"
        "404":
          description: File not found.
        "500":
          description: Internal Server Error.
  /remove_directory:
    post:
      summary: Remove a directory
      description: Removes a directory and its contents.
      operationId: removeDirectory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                directory_path:
                  type: string
                  description: Path of the directory to be removed.
      responses:
        "200":
          description: Directory removed successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryContentsResponse"
        "404":
          description: Directory not found.
        "500":
          description: Internal Server Error.
  /read_file:
    post:
      summary: Read contents of a file
      description: Reads and returns contents of a specified file.
      operationId: readFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file_path:
                  type: string
                  description: Path of the file to be read.
                start_line:
                  type: integer
                  description: Starting line number to read from.
                  default: 1
                end_line:
                  type: integer
                  description: Ending line number to read up to.
      responses:
        "200":
          description: File content read successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  file_content:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
        "404":
          description: File not found.
        "500":
          description: Internal Server Error.
  /remove_lines:
    post:
      summary: Remove lines from a file
      description: Removes specified lines from a file.
      operationId: removeLines
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file_path:
                  type: string
                  description: Path of the file to remove lines from.
                start_line:
                  type: integer
                  description: Starting line number to begin removal.
                  default: 1
                length:
                  type: integer
                  description: Number of lines to remove.
                  default: 1
      responses:
        "200":
          description: File lines removed successfully.
        "400":
          description: Invalid index.
        "404":
          description: File not found.
        "500":
          description: Internal Server Error.
  /insert_lines:
    post:
      summary: Insert lines into a file
      description: Inserts specified lines into a file at a given position.
      operationId: insertLines
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file_path:
                  type: string
                  description: Path of the file to insert lines into.
                start_line:
                  type: integer
                  description: Line number to start insertion.
                  default: 1
                new_lines:
                  type: array
                  items:
                    type: string
                  description: Array of new lines to be inserted.
      responses:
        "200":
          description: File lines inserted successfully.
        "404":
          description: File not found.
        "500":
          description: Internal Server Error.
  /execute_command:
    post:
      summary: Execute a terminal command
      description: Execute the specified command in the terminal and return the output.
      operationId: executeCommand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                command:
                  type: string
                  description: Command to execute in the terminal.
      responses:
        "200":
          description: Command executed successfully.
        "400":
          description: Command execution failed.
        "500":
          description: Internal Server Error.
components:
  schemas:
    DirectoryContentsResponse:
      type: object
      properties:
        message:
          type: string
        directory_contents:
          type: object
          properties:
            files:
              type: array
              items:
                type: string
            directories:
              type: array
              items:
                type: string
        current_directory:
          type: string
